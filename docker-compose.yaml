version: '3.8'

services:
  db:
    image: postgres:latest
    env_file: '.env'
    ports:
      - '5432:5432'
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 10s
      retries: 20
  
  migrate:
    image: rssku/demo:1.0
    env_file: '.env'
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python src/manage.py makemigrations &&
             python src/manage.py migrate"

  api:
    image: rssku/demo:1.0
    env_file: '.env'
    ports:
      - '8000:8000'
    volumes:
      - ./volumes/static:/workdir/src/static
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python src/manage.py collectstatic --noinput &&
             gunicorn core.wsgi:application -b 0.0.0.0:8000 -w 1" 

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    depends_on:
      - api
    volumes:
      - ./nginx/api.conf:/etc/nginx/conf.d/api.conf
      - ./volumes/static:/workdir/src/static
    command: ["/bin/sh", "-c", "rm -f /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"]
      
networks:
  default:
    name: service_network

    


    